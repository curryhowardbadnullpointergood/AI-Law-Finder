

 Abstract needs like abother 20 minutes of rephrasing, and relooking, and just overall a second look.



need to have a look at the titles of the sections again, and make it appropriate. Should take ike 15 minutes. 


Need to optimise the colours of the Gantt Chart as well as the wording, takes around 20 minutes

Need to reqrite the introduction/project brief section of the Intermin report, for the sake of speeed this has been kept the same as the previous low effort submission. Est time: 30 minutes 


Gantt chart section,  tasks and chart need to be displayed horizontally, for the sake of time/agile skipping for now. Est time: 15 minutes 

So talk to some physics profeessor, maybe that's also a part of ECS, and ask them for advice on the project. 

Adam doesn't mind reading through the whole thing. Adam reads 5 pages, omg this is perfectttt. 
Adam won't read through the whole thing, and if he does he is harsh with himself, so the second time he marks it, he will be harsh. He does say he is harsh on himself, and won't bother over Christmas. 

Make your abstract and introduction different. Else it will be like, rereading the same thing twice. 

"Deep learning is good at things it's not supposed to be good at? 
I have a black box that understands physics""
- Adam lol 


So taking a bunch of someone's implementation, then implementing it in my own way is probably good enough as long as I cite them. Nice to highlight where you have done things differntly, and look into the mechanics of how it works. Have a little statement of this bit is me, this is my original contribution. 

Deep learning network is a pain to get to work. 


Do not worry about better performance, explanability is nice but again there is a time constraint, again potentially look at 3 body problem, but submitting on time, is the most useful thing possible.


For referencing, less is more, and implementation is key. Implementation seems to matter more than actual report, though good versions of both will get 90%. 


SO implementaiton is key, in this order do:
readin pysr library documentation 
read the gplearn librry documentation 
come up with a very simple implementation with pysr and numpy, get a graph of time etc, as data set numeber is changed, and as noise is varied, 
have a look at simple neural network models, and try implement those, a quick one if possible, and this is pretty much as far as it goes for now 

Now for the future planning section, talk about A.I. feyman, and various optimisations you plan on making, and that this may possibly improve performane. 
And that is it for the report. 

Oh and btw, adding diagrams is also a great idea. 

Add finished paper to the pysr showcase page. 

time needed: 1 hr 45 minutes

















